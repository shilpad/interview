package com.example.uibasics;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.media.AudioManager;
import android.media.MediaPlayer;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.util.Log;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MotionEvent;
import android.view.View;
import android.view.animation.Animation;
import android.view.animation.LinearInterpolator;
import android.view.animation.RotateAnimation;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.MediaController;
import android.widget.Spinner;
import android.widget.Toast;
import android.widget.VideoView;

public class AddDetailsActivity extends Activity {

    private static int RESULT_LOAD_IMAGE = 1;
    Bitmap bmp;
	private Spinner spinner1;
	VideoView mVideoView;
	int mImageIndex = -1;
	//private MyView mDrawingArea;
    
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_add_details);
		
		addItemsOnSpinner1 ();
		addListenerOnSpinnerItemSelection();
		
		Bundle extras = getIntent().getExtras ();
	    if (extras != null)
	    {
	       mImageIndex = extras.getInt (MyHorizontalLayout.EXTRA_IMAGEINDEX);
	    }
	}

	public void redraw ()
	{
		//mDrawingArea.invalidate();
	}
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.activity_add_details, menu);
		return true;
	}

	public void onClickAdd (View v)
	{
		/*Intent i = new Intent(
                  Intent.ACTION_PICK,
                  android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
           
        startActivityForResult(i, RESULT_LOAD_IMAGE);*/
        
        Intent mediaChooser = new Intent(Intent.ACTION_GET_CONTENT);
        //comma-separated MIME types
        mediaChooser.setType("*/*");//video/*, images/*, audio/*");
        startActivityForResult(Intent.createChooser(mediaChooser,"Select picture, video or audio"), RESULT_LOAD_IMAGE);
	}
	
	public void onClickSave (View v)
	{
	    public void createInformation (Integer profileId, String caption, String notes,
	    		 String mediaPath, List<String> lstTagNames) {
	}
	
    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent intent) {
        super.onActivityResult(requestCode, resultCode, intent);
         
        Toast.makeText(getApplicationContext(), "resultCode=" + resultCode,
                Toast.LENGTH_SHORT).show();
        
        if (requestCode == 1 && resultCode == RESULT_OK && null != intent) {
            Uri selectedImage = intent.getData();
    		Toast.makeText(getApplicationContext(), "selectedImage=" + selectedImage,
                    Toast.LENGTH_SHORT).show();
    		
            String[] filePathColumn = { MediaStore.Images.Media.DATA };
 
            Cursor cursor = getContentResolver().query(selectedImage,
                    filePathColumn, null, null, null);
            cursor.moveToFirst();
 
            int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
            String picturePath = cursor.getString(columnIndex);
    		Toast.makeText(getApplicationContext(), "picturePath=" + picturePath,
                    Toast.LENGTH_SHORT).show();
            cursor.close();

            List<String> lstSegments = selectedImage.getPathSegments();
            
            if (lstSegments.get(1).contentEquals("video") || lstSegments.get(1).contentEquals("audio"))
            {
        		Toast.makeText(getApplicationContext(), "Selected video OR audio !!!",
                        Toast.LENGTH_SHORT).show();
                mVideoView = (VideoView) findViewById(R.id.videoView1);
                mVideoView.setVisibility(View.VISIBLE);
                mVideoView.setVideoPath(picturePath);
                mVideoView.setMediaController(new MediaController(this));
                mVideoView.requestFocus();
                mVideoView.start();
            }
            else if (lstSegments.get(1).contentEquals("images"))
            {
            	Toast.makeText(getApplicationContext(), "Selected image !!!",
                        Toast.LENGTH_SHORT).show();
            	
            	mVideoView = (VideoView) findViewById(R.id.videoView1);
                mVideoView.setVisibility(View.GONE);
                
                if(bmp != null && !bmp.isRecycled())
                {
                	bmp.recycle();
                    bmp = null;               
                }
                
                File file=new File(picturePath);
                
           		try {
        		    BitmapFactory.Options options = new BitmapFactory.Options();
        		    options.inSampleSize = 4;
        		    
                   bmp= decodeFile(file); //this is new bitmap which you can use for your purpose 
                    ImageView imageView = (ImageView) findViewById(R.id.imgView);
                    imageView.setImageBitmap(bmp);
        		} catch (OutOfMemoryError e) {
        		    e.printStackTrace();
        		    System.gc();

        		    try {
        		        bmp = decodeFile(file);
        		    } catch (OutOfMemoryError e2) {
        		      e2.printStackTrace();
        		      // handle gracefully.
        		    }
        		}

            }
           /* else if (lstSegments.get(1).contentEquals("audio"))
            {
            	Toast.makeText(getApplicationContext(), "Audio file selected",
                        Toast.LENGTH_SHORT).show();
            	try {
            		final MediaPlayer mediaPlayer = new MediaPlayer();
            		mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);
            		mediaPlayer.setDataSource(getApplicationContext(), selectedImage);
            		mediaPlayer.prepareAsync();
            		
            		mediaPlayer.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {
						
						@Override
						public void onPrepared(MediaPlayer mp) {
							// TODO Auto-generated method stub
							mediaPlayer.start();
						}
					});
            		
				} catch (IllegalArgumentException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (SecurityException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IllegalStateException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            	
            }*/
            
            ///////// Not using this
            /*if(bmp != null && !bmp.isRecycled())
            {
                bmp = null;               
            }
            
            BitmapFactory.Options options = new BitmapFactory.Options();
            options.inTempStorage = new byte[16*1024];
            
            bmp = BitmapFactory.decodeFile(picturePath, options);
            ImageView imageView = (ImageView) findViewById(R.id.imgView);
            imageView.setImageBitmap(bmp);*/
            /// Not using this
            
            /*if(bmp != null && !bmp.isRecycled())
            {
            	bmp.recycle();
                bmp = null;               
            }
            
            File file=new File(picturePath);
            bmp=decodeFile(file); //this is new bitmap which you can use for your purpose 
            ImageView imageView = (ImageView) findViewById(R.id.imgView);
            imageView.setImageBitmap(bmp);*/
            
            /*RotateAnimation anim = new RotateAnimation(0f, 350f, 15f, 15f);
            anim.setInterpolator(new LinearInterpolator());
            anim.setRepeatCount(Animation.INFINITE);
            anim.setDuration(700);
            
            imageView.startAnimation (anim);*/
            
            
        }
    }
    
 private Bitmap decodeFile(File f){
        try {
            //Decode image size
            BitmapFactory.Options o = new BitmapFactory.Options();
            o.inJustDecodeBounds = true;
            BitmapFactory.decodeStream(new FileInputStream(f),null,o);

            //The new size we want to scale to
            final int REQUIRED_SIZE=70;

            //Find the correct scale value. It should be the power of 2.
            int width_tmp=o.outWidth, height_tmp=o.outHeight;
            int scale=1;
            while(true){
                if(width_tmp/2<REQUIRED_SIZE || height_tmp/2<REQUIRED_SIZE)
                    break;
                width_tmp/=2;
                height_tmp/=2;
                scale*=2;
            }

            //Decode with inSampleSize
            BitmapFactory.Options o2 = new BitmapFactory.Options();
            o2.inSampleSize=scale;
            o2.inTempStorage = new byte[16*1024];
            return BitmapFactory.decodeStream(new FileInputStream(f), null, o2);
        } catch (FileNotFoundException e) {}
        return null;
    }
 
 // add items into spinner dynamically
 	public void addItemsOnSpinner1() {

	spinner1 = (Spinner) findViewById(R.id.spinner1);
	List<String> list = new ArrayList<String>();
	
    Calendar c = Calendar.getInstance();
    System.out.println("Current time => " + c.getTime());

    SimpleDateFormat df = new SimpleDateFormat("MM/dd/yyyy");
    String formattedDate = df.format(c.getTime());
    
	list.add(formattedDate);
	
	list.add("Change Date");
	list.add("1st Birthday");
	list.add("2nd Birthday");
	list.add("3rd Birthday");
	list.add("4th Birthday");
	list.add("5th Birthday");
			
	ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this,
		android.R.layout.simple_spinner_item, list);
	dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
	spinner1.setAdapter(dataAdapter);
 }
 	
 	public void addListenerOnSpinnerItemSelection() {
 		spinner1 = (Spinner) findViewById(R.id.spinner1);
 		
        Toast.makeText(getApplicationContext(), "Position clicked=" + spinner1.getSelectedItemPosition(),
                Toast.LENGTH_SHORT).show();
        
        //spinner1.setOnTouchListener(Spinner_OnTouch);
        //spinner1.setOnKeyListener(Spinner_OnKey);
        //spinner1.setOnFocusChangeListener(Spinner_OnFocus);
        //spinner1.setOnItemClickListener(Spinner_OnItemClick);
        spinner1.setOnItemSelectedListener(Spinner_OnItemSelected);
 	  }
 	
 	
 	private AdapterView.OnItemSelectedListener Spinner_OnItemSelected = new AdapterView.OnItemSelectedListener() {

		@Override
		public void onItemSelected(AdapterView<?> arg0, View arg1, int arg2,
				long arg3) {
			// TODO Auto-generated method stub
			Toast.makeText(getApplicationContext(), "onItemSelected" + arg2 + arg3,
	                Toast.LENGTH_SHORT).show();
	        if (arg2 == 1) {
	    		Intent intent = new Intent (getApplicationContext(), CalendarActivity.class);
	    		startActivity(intent);
 	        }
		}

		@Override
		public void onNothingSelected(AdapterView<?> arg0) {
			// TODO Auto-generated method stub
			Toast.makeText(getApplicationContext(), "onNothingSelected",
	                Toast.LENGTH_SHORT).show();
		}
	};
	
 	private View.OnFocusChangeListener Spinner_OnFocus = new View.OnFocusChangeListener() {
		
		@Override
		public void onFocusChange(View v, boolean hasFocus) {
			// TODO Auto-generated method stub
			int item = spinner1.getSelectedItemPosition();
			Toast.makeText(getApplicationContext(), "OnFocusChangeListener Id=" + v.getId() + " Item=" + item,
	                Toast.LENGTH_SHORT).show();
		}
	};
 	
 	private View.OnTouchListener Spinner_OnTouch = new View.OnTouchListener() {
		@Override
		public boolean onTouch(View v, MotionEvent event) {
			// TODO Auto-generated method stub
			
			int item = spinner1.getSelectedItemPosition();
			Toast.makeText(getApplicationContext(), "OnTouchListener Id=" + v.getId() + " Item=" + item,
	                Toast.LENGTH_SHORT).show();
			
			
	        if (/*event.getAction() == MotionEvent.ACTION_UP &&*/ item==1) {
	    		Intent intent = new Intent (getApplicationContext(), CalendarActivity.class);
	    		startActivity(intent);
 	        }
 	        return false;
		}
 	};
 	
 	private View.OnKeyListener Spinner_OnKey = new View.OnKeyListener() {
		@Override
		public boolean onKey(View v, int keyCode, KeyEvent event) {
			// TODO Auto-generated method stub
			int item = spinner1.getSelectedItemPosition();
			Toast.makeText(getApplicationContext(), "OnKeyListener Id=" + v.getId() + " Item=" + item,
	                Toast.LENGTH_SHORT).show();
 	        if (/*keyCode == KeyEvent.KEYCODE_DPAD_CENTER && */item==1) {
 	          Intent intent = new Intent (getApplicationContext(), CalendarActivity.class);
	    		startActivity(intent);
 	            return true;
 	        } else {
 	            return false;
 	        }
		}
 	};
}
